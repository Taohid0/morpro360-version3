{"version":3,"sources":["validation/input.js","views/CustomModals/SuccessModal.js","views/CustomModals/DangerModal.js","ApiCalls/load.js","views/Forms/Load/AddLoadForm.js","views/Component/Load/AddLoad.js"],"names":["validateInput","obj","arr","errorMessages","name","description","phone","firstName","lastName","userName","email","password","distance","pickUpDate","dropOffDate","weight","rate","driverStatus","productDetails","pickUpAddress","pickUpCity","pickUpZipCode","pickUpState","dropOffAddress","dropOffCity","dropOffZipCode","dropOffState","status","offererCompanyId","brokerId","assignedCompanyId","assignerUserId","assignerDriverId","state","city","license","address","companyId","driverId","note","loadId","MC","DOT","errors","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","field","value","push","err","return","length","console","log","Success","_this","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_6__","isOpen","props","isVisible","toggle","toggleSuccess","className","reactstrap__WEBPACK_IMPORTED_MODULE_7__","title","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","color","onClick","toggleModal","goToDashboard","Component","DangerModal","toggleDanger","createLoad","_x","_createLoad","apply","arguments","_callee","data","userService","user","loadURL","promise","_mnt_01D372CE3128C020_PROGRAM_PART_koa_projects_morpro360_version3_morpro360_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context","prev","UserService","getUser","sent","AppConfig","axios","headers","Authorization","token","method","url","abrupt","stop","loadDetails","_x2","_loadDetails","_callee2","id","loadDetailsURL","_context2","loadDetailsAllFields","_x3","_loadDetailsAllFields","_callee3","loadDetailsAllFieldsURL","_context3","availableLoad","_x4","_availableLoad","_callee4","availableLoadURL","_context4","allLoadAdmin","_x5","_allLoadAdmin","_callee5","allLoadsAdminURL","_context5","relatedBids","_x6","_relatedBids","_callee6","relatedBidsURL","_context6","changeLoadStatus","_x7","_x8","_changeLoadStatus","_callee7","changeLoadStatusURL","_context7","AddLoadForm","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isErrorModalVisible","modalErrorMessage","isSuccessModalVisible","successModalTitle","modalSuccessMessage","companyDropdown","loading","handleChange","bind","assertThisInitialized","handleSubmit","toggleDangerModal","toggleSuccessModal","setState","e","defineProperty","target","preventDefault","stateData","validationErrors","errormessage","join","response","t0","alert","clearData","history","_this2","react_default","LoadingOverlay_default","active","styles","spinner","base","objectSpread","width","background","text","SuccessModal","Card","CardHeader","CardBody","Row","Col","col","sm","md","xl","FormGroup","Label","htmlFor","Input","type","placeholder","required","onChange","Button","AddLoad","loadUserOrRedirect","AddLoadForm_AddLoadForm"],"mappings":"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","file":"static/js/64.e464d6fb.chunk.js","sourcesContent":["function validateInput(obj,arr)\n{\n    const errorMessages = {\n        \"name\" : \"Name cannot be blank\",\n        \"description\":\"Description cannot be blank\",\n        \"phone\":\"Phone number cannot be blank\",\n        \"firstName\":\"Fist name cannot be blank\",\n        \"lastName\": \"Last name cannot be blank\",\n        \"userName\":\"Username cannot be blank\",\n        \"email\" :\"Email cannot be blank\",\n        \"password\" : \"Password cannot be blank\",\n        \"distance\":\"Distance  cannot be blank\",\n        \"pickUpDate\":\"Pick Up Date cannot be blank\",\n        \"dropOffDate\":\"Drop Off Date cannot be blank\",\n        \"weight\":\"Weight cannot be blank\",\n        \"rate\":\"Rate cannot be blank\",\n        \"driverStatus\":\"Driver Status cannot be blank\",\n        \"productDetails\":\"Product Details cannot be blank\",\n        \"pickUpAddress\":\"Pick Up Address cannot be blank\",\n        \"pickUpCity\":\"Pick Up City cannot be blank\",\n        \"pickUpZipCode\":\"Pick Up Zip Code cannot be blank\",\n        \"pickUpState\":\"Pick Up State  cannot be blank\",\n        \"dropOffAddress\":\"Drop Off Address cannot be blank\",\n        \"dropOffCity\":\"Drop Off City cannot be blank\",\n        \"dropOffZipCode\":\"Drop Off Zip Code cannot be blank\",\n        \"dropOffState\":\"Drop Off State cannot be blank\",\n        \"status\":\"Status cannot be blank\",\n        \"offererCompanyId\":\"Offerer Company cannot be blank\",\n        \"brokerId\":\"Broker cannot be blank\",\n        \"assignedCompanyId\":\"Assigned Company cannot be blank\",\n        \"assignerUserId\":\"Assigned User cannot be blank\",\n        \"assignerDriverId\":\"Asigned Driver cannot be blank\",\n        \"state\":\"State cannot be blank\",\n        \"city\":\"City cannot be blank\",\n        \"license\":\"License cannot be blank\",\n        \"address\":\"Address cannot be blank\",\n        \"companyId\":\"Company cannnot be blank\",\n        \"driverId\":\"Driver cannot blank\",\n        \"note\":\"Note cannot be blank\",\n        \"loadId\":\"Load cannot be blank\",\n        \"MC\":\"MC cannot be blank\",\n        \"DOT\":\"DOT cannot be blank\",\n        \n\n    }\n    let errors = [];\n    for(let field of arr)\n    {\n        if(!obj[field])\n        {\n            errors.push(errorMessages[field]);\n        }\n    }\n    if (errors.length===0)\n    {\n        return false;\n    }\n    console.log(errors);\n    return errors;\n}\nexport default validateInput;","import React, {Component} from \"react\";\n\nimport {Button,Modal, ModalFooter, ModalHeader,ModalBody} from \"reactstrap\";\n\n\nexport default class Success extends Component{\n    \n    render()\n    {\n        return(\n     <Modal\n                  isOpen={this.props.isVisible}\n                  toggle={this.toggleSuccess}\n                  className={\"modal-success \" + this.props.className}\n                >\n                  <ModalHeader toggle={this.toggleSuccess}>\n                    {this.props.title}\n                  </ModalHeader>\n                  <ModalBody>\n                  <pre>{this.props.errors}</pre>\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"success\" onClick={()=>{this.props.toggleModal();this.props.goToDashboard();}}>\n                      OK\n                    </Button>{\" \"}\n                  </ModalFooter>\n                </Modal>\n        )\n    }\n\n}\n","import React, {Component} from \"react\";\n\nimport {Button,Modal, ModalFooter, ModalHeader,ModalBody} from \"reactstrap\";\n\n\nexport default class DangerModal extends Component{\n    \n    render()\n    {\n        return(\n            <Modal isOpen={this.props.isVisible} toggle={this.toggleDanger}\n            className={'modal-danger ' + this.props.className}>\n       <ModalHeader toggle={this.toggleDanger}>Error</ModalHeader>\n       <ModalBody>\n         <pre>{this.props.errors}</pre>\n       </ModalBody>\n       <ModalFooter>\n         {/* <Button color=\"danger\" onClick={this.toggleDanger}>Do Something</Button>{' '} */}\n         <Button color=\"secondary\" onClick={this.props.toggleModal}>CLOSE</Button>\n       </ModalFooter>\n     </Modal>\n        )\n    }\n\n}","import axios from \"axios\";\nimport AppConfig from \"../config/AppConfig\";\n\nimport UserService from \"../services/User\";\n\nexport async function createLoad(data) {\n  const userService = new UserService();\n  const user = await userService.getUser();\n\n  const { loadURL } = AppConfig;\n\n  const promise = await axios({\n    headers: {\n      Authorization: user.token\n    },\n    method: \"POST\",\n    url: loadURL,\n    data\n  });\n  return promise;\n}\n\nexport async function loadDetails(id) {\n  const userService = new UserService();\n  const user = await userService.getUser();\n\n  let { loadDetailsURL } = AppConfig;\n  loadDetailsURL += \"/\" + id;\n\n  const promise = await axios({\n    headers: {\n      Authorization: user.token\n    },\n    method: \"GET\",\n    url: loadDetailsURL\n  });\n  console.log(promise);\n  return promise;\n}\nexport async function loadDetailsAllFields(id) {\n  const userService = new UserService();\n  const user = await userService.getUser();\n\n  let { loadDetailsAllFieldsURL } = AppConfig;\n  loadDetailsAllFieldsURL += \"/\" + id;\n  console.log(loadDetailsAllFieldsURL);\n  const promise = await axios({\n    headers: {\n      Authorization: user.token\n    },\n    method: \"GET\",\n    url: loadDetailsAllFieldsURL\n  });\n  console.log(promise);\n  return promise;\n}\nexport async function availableLoad(state) {\n  const userService = new UserService();\n  const user = await userService.getUser();\n\n  const { availableLoadURL } = AppConfig;\n\n  console.log(state);\n\n  const promise = await axios({\n    headers: {\n      Authorization: user.token\n    },\n    method: \"POST\",\n    url: availableLoadURL,\n    data:state,\n  });\n  return promise;\n}\n\nexport async function allLoadAdmin(status) {\n  const userService = new UserService();\n  const user = await userService.getUser();\n\n  let { allLoadsAdminURL } = AppConfig;\n  if (status) {\n    allLoadsAdminURL += \"?status=\" + status;\n  }\n\n  const promise = await axios({\n    headers: {\n      Authorization: user.token\n    },\n    method: \"GET\",\n    url: allLoadsAdminURL\n  });\n  return promise;\n}\nexport async function relatedBids(loadId) {\n  const userService = new UserService();\n  const user = await userService.getUser();\n\n  let { relatedBidsURL } = AppConfig;\n\n  relatedBidsURL += \"?loadId=\" + loadId;\n\n  const promise = await axios({\n    headers: {\n      Authorization: user.token\n    },\n    method: \"GET\",\n    url: relatedBidsURL\n  });\n  return promise;\n}\n\nexport async function changeLoadStatus(loadId, status) {\n  const userService = new UserService();\n  const user = await userService.getUser();\n\n  let { changeLoadStatusURL } = AppConfig;\n\n  const promise = await axios({\n    headers: {\n      Authorization: user.token\n    },\n    method: \"POST\",\n    url: changeLoadStatusURL,\n    data: {\n      loadId,\n      status\n    }\n  });\n  return promise;\n}\n","import React, { Component } from \"react\";\nimport {\n  Badge,\n  Button,\n  ButtonDropdown,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Collapse,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Fade,\n  Form,\n  FormGroup,\n  FormText,\n  FormFeedback,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Label,\n  Row\n} from \"reactstrap\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport UserService from \"../../../services/User\";\nimport validateInput from \"../../../validation/input\";\nimport { createLoad } from \"../../../ApiCalls/load\";\nimport DangerModal from \"../../CustomModals/DangerModal\";\nimport SuccessModal from \"../../CustomModals/SuccessModal\";\n\nexport default class AddLoadForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      // offererCompanyId:\"\",\n      distance: \"\",\n      weight: \"\",\n      rate: \"\",\n      productDetails: \"\",\n\n      pickUpAddress: \"\",\n      pickUpState: \"\",\n      pickUpCity: \"\",\n      pickUpZipCode: \"\",\n      pickUpDate: \"\",\n\n      dropOffCity: \"\",\n      dropOffZipCode: \"\",\n      dropOffState: \"\",\n      dropOffAddress: \"\",\n      dropOffDate: \"\",\n\n      isErrorModalVisible: false,\n      modalErrorMessage: \"\",\n      isSuccessModalVisible: false,\n      successModalTitle: \"Sucessful\",\n      modalSuccessMessage: \"\",\n      companyDropdown: [],\n      loading:false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleDangerModal = this.toggleDangerModal.bind(this);\n    this.toggleSuccessModal = this.toggleSuccessModal.bind(this);\n  }\n\n  componentWillMount() {\n  }\n\n  toggleDangerModal() {\n    this.setState((state, props) => ({\n      isErrorModalVisible: !state.isErrorModalVisible\n    }));\n  }\n  toggleSuccessModal() {\n    this.setState((state, props) => ({\n      isSuccessModalVisible: !state.isSuccessModalVisible\n    }));\n  }\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  async handleSubmit(e) {\n    e.preventDefault();\n    const {\n      isErrorModalVisible,\n      modalErrorMessage,\n      isSuccessModalVisible,\n      modalSuccessMessage,\n      successModalTitle,\n      companyDropdown,\n      loading,\n      ...stateData\n    } = this.state;\n    const validationErrors = validateInput(stateData, [\n      \"name\",\n      // \"offererCompanyId\",\n      \"distance\",\n      \"weight\",\n      \"rate\",\n      \"productDetails\",\n      \"pickUpAddress\",\n      \"pickUpState\",\n      \"pickUpCity\",\n      \"pickUpZipCode\",\n      \"pickUpDate\",\n      \"dropOffCity\",\n      \"dropOffZipCode\",\n      \"dropOffState\",\n      \"dropOffAddress\",\n      \"dropOffDate\"\n    ]);\n\n    if (validationErrors) {\n      const errormessage = validationErrors.join(\"\\n\");\n      this.setState({ modalErrorMessage: errormessage });\n      this.toggleDangerModal();\n\n      return;\n    }\n\n    try {\n      this.setState({loading:true});\n      const response = await createLoad(stateData);\n      const data = response.data;\n      if (data.status) {\n        const modalSuccessMessage = \"Successfully new load added\";\n        this.setState({ modalSuccessMessage });\n        this.toggleSuccessModal();\n      } else {\n        const errormessage = data.errors.join(\"\\n\");\n        this.setState({ modalErrorMessage: errormessage });\n        this.toggleDangerModal();\n      }\n    } catch (err) {\n      const response = err.response;\n      console.log(err);\n\n      if (response && response.status === 401) {\n        const errorMessage = \"Session expired, please login to continue\";\n        alert(errorMessage);\n        this.userService.clearData();\n        this.props.history.push(\"/login\");\n      } else {\n        const errormessage = \"Something wrong, please try again later\";\n        this.setState({ modalErrorMessage: errormessage });\n        this.toggleDangerModal();\n      }\n    }\n    this.setState({loading:false});\n  }\n\n  render() {\n    return (\n      <div>\n       <LoadingOverlay\n          active={this.state.loading}\n          styles={{\n            spinner: base => ({\n              ...base,\n              width: \"250px\",\n              background: \"rgba(0, 0, 0, 0.2)\"\n            })\n          }}\n          spinner\n          text=\"\"\n        />\n        <DangerModal\n          isVisible={this.state.isErrorModalVisible}\n          errors={this.state.modalErrorMessage}\n          toggleModal={this.toggleDangerModal}\n        />\n        <SuccessModal\n          isVisible={this.state.isSuccessModalVisible}\n          errors={this.state.modalSuccessMessage}\n          toggleModal={this.toggleSuccessModal}\n          title={this.state.successModalTitle}\n          goToDashboard={() => this.props.history.push(\"/dashboard\")}\n        />\n        <Card>\n          <CardHeader>\n            <strong>Load</strong>\n            <small> Form</small>\n          </CardHeader>\n          <CardBody>\n            <Row>\n              <Col col=\"6\" sm=\"4\" md=\"4\" xl className=\"mb-3 mb-xl-0\">\n                <FormGroup>\n                  <Label htmlFor=\"name\">Load Name</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"name\"\n                    placeholder=\"Name of Load\"\n                    required\n                    name=\"name\"\n                    value={this.state.name}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n              </Col>\n              <Col col=\"6\" sm=\"4\" md=\"4\" xl className=\"mb-3 mb-xl-0\">\n                <FormGroup>\n                  <Label htmlFor=\"distance\">Distance</Label>\n                  <Input\n                    type=\"number\"\n                    id=\"distance\"\n                    placeholder=\"Enter distance (in Miles)\"\n                    name=\"distance\"\n                    value={this.state.distance}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n              </Col>\n              {/* <Col col=\"6\" sm=\"4\" md=\"4\" xl className=\"mb-3 mb-xl-0\">\n                <FormGroup>\n                  <Label htmlFor=\"company\">Select Company</Label>\n                  <Input type=\"select\" name=\"offererCompanyId\" id=\"offererCompanyId\" value={this.state.offererCompanyId} onChange={this.handleChange}>\n                  {this.state.companyDropdown}\n                  </Input>\n                </FormGroup>\n              </Col> */}\n              <Col col=\"6\" sm=\"4\" md=\"4\" xl className=\"mb-3 mb-xl-0\">\n                <FormGroup>\n                  <Label htmlFor=\"weight\">weight</Label>\n                  <Input\n                    type=\"number\"\n                    id=\"weight\"\n                    placeholder=\"Enter weight of load (in lb)\"\n                    required\n                    name=\"weight\"\n                    value={this.state.weight}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n\n            <Row>\n              {\" \"}\n              <Col col=\"6\" sm=\"4\" md=\"4\" xl className=\"mb-3 mb-xl-0\">\n                <FormGroup>\n                  <Label htmlFor=\"productDetails\">Product Details</Label>\n                  <Input\n                    type=\"textarea\"\n                    id=\"productDetails\"\n                    placeholder=\"Enter product information\"\n                    required\n                    name=\"productDetails\"\n                    value={this.state.productDetails}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n              </Col>\n              <Col col=\"6\" sm=\"4\" md=\"4\" xl className=\"mb-3 mb-xl-0\">\n                <FormGroup>\n                  <Label htmlFor=\"rate\">Rate</Label>\n                  <Input\n                    type=\"number\"\n                    id=\"rate\"\n                    placeholder=\"Enter Rate (in USD)\"\n                    name=\"rate\"\n                    value={this.state.rate}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n              </Col>\n              <Col col=\"6\" sm=\"4\" md=\"4\" xl className=\"mb-3 mb-xl-0\">\n                {/* <FormGroup>\n                  <Label htmlFor=\"rate\">Rate</Label>\n                  <Input\n                    type=\"number\"\n                    id=\"rate\"\n                    placeholder=\"Enter your rate\"\n                    name=\"rate\"\n                    value={this.state.rate}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup> */}\n              </Col>\n            </Row>\n\n            <br />\n            <br />\n\n            <Row>\n              <Col col=\"6\" sm=\"4\" md=\"4\" xl className=\"mb-3 mb-xl-0\">\n                <FormGroup>\n                  <Label htmlFor=\"pickUpState\">Pick Up State</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"pickUpState\"\n                    placeholder=\"Enter pick up state\"\n                    name=\"pickUpState\"\n                    value={this.state.pickUpState}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n              </Col>\n              <Col col=\"6\" sm=\"4\" md=\"4\" xl className=\"mb-3 mb-xl-0\">\n                <FormGroup>\n                  <Label htmlFor=\"pickUpCity\">Pick Up City</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"pickUpCity\"\n                    placeholder=\"Enter pick up City\"\n                    name=\"pickUpCity\"\n                    value={this.state.pickUpCity}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n              </Col>\n              <Col col=\"6\" sm=\"4\" md=\"4\" xl className=\"mb-3 mb-xl-0\">\n                <FormGroup>\n                  <Label htmlFor=\"pickUpZipCode\">Pick Up Zip Code</Label>\n                  <Input\n                    type=\"number\"\n                    id=\"pickUpZipCode\"\n                    placeholder=\"Enter pick up Zip Code\"\n                    name=\"pickUpZipCode\"\n                    value={this.state.pickUpZipCode}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col col=\"6\" sm=\"4\" md=\"4\" xl className=\"mb-3 mb-xl-0\">\n                <FormGroup>\n                  <Label htmlFor=\"pickUpAddress\">Pick Up Address</Label>\n                  <Input\n                    type=\"textarea\"\n                    id=\"pickUpAddress\"\n                    placeholder=\"Enter pick up Address\"\n                    name=\"pickUpAddress\"\n                    value={this.state.pickUpAddress}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n              </Col>\n\n              <Col col=\"6\" sm=\"4\" md=\"4\" xl className=\"mb-3 mb-xl-0\">\n                <FormGroup>\n                  <Label htmlFor=\"pickUpDate\">Pick Up Date</Label>\n                  <Input\n                    type=\"date\"\n                    id=\"pickUpDate\"\n                    placeholder=\"Enter pick up Date\"\n                    name=\"pickUpDate\"\n                    value={this.state.pickUpDate}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n              </Col>\n              <Col col=\"6\" sm=\"4\" md=\"4\" xl className=\"mb-3 mb-xl-0\">\n                <FormGroup />\n              </Col>\n            </Row>\n\n            <br />\n            <br />\n\n            <Row>\n              <Col col=\"6\" sm=\"4\" md=\"4\" xl className=\"mb-3 mb-xl-0\">\n                <FormGroup>\n                  <Label htmlFor=\"dropOffState\">Drop Off State</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"dropOffState\"\n                    placeholder=\"Enter drop off state\"\n                    name=\"dropOffState\"\n                    value={this.state.dropOffState}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n              </Col>\n              <Col col=\"6\" sm=\"4\" md=\"4\" xl className=\"mb-3 mb-xl-0\">\n                <FormGroup>\n                  <Label htmlFor=\"dropOffCity\">Drop Off City</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"dropOffCity\"\n                    placeholder=\"Enter drop off City\"\n                    name=\"dropOffCity\"\n                    value={this.state.dropOffCity}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n              </Col>\n              <Col col=\"6\" sm=\"4\" md=\"4\" xl className=\"mb-3 mb-xl-0\">\n                <FormGroup>\n                  <Label htmlFor=\"dropOffZipCode\">Drop Off Zip Code</Label>\n                  <Input\n                    type=\"number\"\n                    id=\"dropOffZipCode\"\n                    placeholder=\"Enter drop off Zip Code\"\n                    name=\"dropOffZipCode\"\n                    value={this.state.dropOffZipCode}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col col=\"6\" sm=\"4\" md=\"4\" xl className=\"mb-3 mb-xl-0\">\n                <FormGroup>\n                  <Label htmlFor=\"dropOffAddress\">Drop Off Address</Label>\n                  <Input\n                    type=\"textarea\"\n                    id=\"dropOffAddress\"\n                    placeholder=\"Enter Drop Off Address\"\n                    name=\"dropOffAddress\"\n                    value={this.state.dropOffAddress}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n              </Col>\n\n              <Col col=\"6\" sm=\"4\" md=\"4\" xl className=\"mb-3 mb-xl-0\">\n                <FormGroup>\n                  <Label htmlFor=\"dropOffDate\">Drop Off Date</Label>\n                  <Input\n                    type=\"date\"\n                    id=\"dropOffDate\"\n                    placeholder=\"Enter Drop Off Date\"\n                    name=\"dropOffDate\"\n                    value={this.state.dropOffDate}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n              </Col>\n              <Col col=\"6\" sm=\"4\" md=\"4\" xl className=\"mb-3 mb-xl-0\" />\n            </Row>\n          </CardBody>\n\n          <Button\n            className=\"btn btn-success col-6 align-self-center\"\n            onClick={this.handleSubmit}\n          >\n            <i className=\"fa fa-dot-circle-o\" /> Create Load\n          </Button>\n          <br />\n          <br />\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport AddLoadForm from \"../../Forms/Load/AddLoadForm\";\n\nimport UserService from \"../../../services/User\";\n\nexport default class AddLoad extends Component {\n  constructor(props) {\n    super(props);\n\n    this.userService = new UserService();\n    this.loadUserOrRedirect = this.loadUserOrRedirect.bind(this);\n  }\n\n  componentWillMount() {\n    this.loadUserOrRedirect();\n  }\n\n  async loadUserOrRedirect() {\n    const user = await this.userService.getUser();\n\n    if (!user) {\n      this.props.history.push(\"/login\");\n    }\n  }\n  render() {\n    return <AddLoadForm history={this.props.history}/>;\n  }\n}\n"],"sourceRoot":""}