{"version":3,"sources":["../node_modules/@coreui/coreui-plugin-chartjs-custom-tooltips/dist/umd/custom-tooltips.js","views/Component/Dashboard/Dashboard.js"],"names":["exports","CustomTooltips","tooltipModel","_this","this","ClassName","ABOVE","BELOW","CHARTJS_TOOLTIP","NO_TRANSFORM","TOOLTIP_BODY","TOOLTIP_BODY_ITEM","TOOLTIP_BODY_ITEM_COLOR","TOOLTIP_BODY_ITEM_LABEL","TOOLTIP_BODY_ITEM_VALUE","TOOLTIP_HEADER","TOOLTIP_HEADER_ITEM","Selector","DIV","SPAN","TOOLTIP","_chart","canvas","id","_idMaker","Math","random","toString","_canvasId","_setCanvasId","tooltip","document","getElementById","createElement","className","parentNode","appendChild","opacity","classList","remove","yAlign","add","body","titleLines","title","tooltipHeader","forEach","tooltipHeaderTitle","innerHTML","tooltipBody","tooltipBodyItems","map","item","lines","i","tooltipBodyItem","colors","labelColors","tooltipBodyItemColor","style","backgroundColor","split","length","tooltipBodyItemLabel","tooltipBodyItemValue","pop","_tooltipBodyItemValue","positionY","offsetTop","positionX","offsetLeft","left","caretX","top","caretY","Object","defineProperty","value","factory","brandPrimary","lazy","__webpack_require__","e","then","bind","getStyle","brandSuccess","brandInfo","brandDanger","cardChartData1","labels","datasets","label","borderColor","data","cardChartOpts1","tooltips","enabled","custom","maintainAspectRatio","legend","display","scales","xAxes","gridLines","color","zeroLineColor","ticks","fontSize","fontColor","yAxes","min","apply","max","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","cardChartData2","cardChartOpts2","tension","cardChartData3","cardChartOpts3","cardChartData4","cardChartOpts4","barPercentage","floor","data1","data2","data3","push","hexToRgba","ceil","Dashboard","props","_mnt_01D372CE3128C020_PROGRAM_PART_koa_projects_morpro360_version3_morpro360_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_mnt_01D372CE3128C020_PROGRAM_PART_koa_projects_morpro360_version3_morpro360_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_mnt_01D372CE3128C020_PROGRAM_PART_koa_projects_morpro360_version3_morpro360_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","loading","react__WEBPACK_IMPORTED_MODULE_9___default","a","state","userService","UserService","toggle","_mnt_01D372CE3128C020_PROGRAM_PART_koa_projects_morpro360_version3_morpro360_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__","onRadioBtnClick","loadUserOrRedirect","dropdownOpen","radioSelected","renderDashboard","getUser","user","console","log","history","setState","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","xs","sm","lg","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","height","react_chartjs_2__WEBPACK_IMPORTED_MODULE_10__","options","react_loading_overlay__WEBPACK_IMPORTED_MODULE_18___default","active","styles","spinner","base","_mnt_01D372CE3128C020_PROGRAM_PART_koa_projects_morpro360_version3_morpro360_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","width","background","text","Component"],"mappings":"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","file":"static/js/69.e3f531c6.chunk.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global['custom-tooltips'] = {});\n})(this, function (exports) {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.2.0): custom-tooltips.js\n   * Licensed under MIT (https://coreui.io/license)\n   * --------------------------------------------------------------------------\n   */\n\n  function CustomTooltips(tooltipModel) {\n    var _this = this; // Add unique id if not exist\n\n\n    var _setCanvasId = function _setCanvasId() {\n      var _idMaker = function _idMaker() {\n        var _hex = 16;\n        var _multiplier = 0x10000;\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\n      };\n\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\n\n      _this._chart.canvas.id = _canvasId;\n      return _canvasId;\n    };\n\n    var ClassName = {\n      ABOVE: 'above',\n      BELOW: 'below',\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\n      NO_TRANSFORM: 'no-transform',\n      TOOLTIP_BODY: 'tooltip-body',\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\n      TOOLTIP_HEADER: 'tooltip-header',\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\n    };\n    var Selector = {\n      DIV: 'div',\n      SPAN: 'span',\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\n    };\n    var tooltip = document.getElementById(Selector.TOOLTIP);\n\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.id = Selector.TOOLTIP;\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\n\n      this._chart.canvas.parentNode.appendChild(tooltip);\n    } // Hide if no tooltip\n\n\n    if (tooltipModel.opacity === 0) {\n      tooltip.style.opacity = 0;\n      return;\n    } // Set caret Position\n\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n\n    if (tooltipModel.yAlign) {\n      tooltip.classList.add(tooltipModel.yAlign);\n    } else {\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\n    } // Set Text\n\n\n    if (tooltipModel.body) {\n      var titleLines = tooltipModel.title || [];\n      var tooltipHeader = document.createElement(Selector.DIV);\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n      titleLines.forEach(function (title) {\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n        tooltipHeaderTitle.innerHTML = title;\n        tooltipHeader.appendChild(tooltipHeaderTitle);\n      });\n      var tooltipBody = document.createElement(Selector.DIV);\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\n        return item.lines;\n      });\n      tooltipBodyItems.forEach(function (item, i) {\n        var tooltipBodyItem = document.createElement(Selector.DIV);\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n        var colors = tooltipModel.labelColors[i];\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\n\n        if (item[0].split(':').length > 1) {\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\n        } else {\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\n\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          _tooltipBodyItemValue.innerHTML = item[0];\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\n        }\n\n        tooltipBody.appendChild(tooltipBodyItem);\n      });\n      tooltip.innerHTML = '';\n      tooltip.appendChild(tooltipHeader);\n      tooltip.appendChild(tooltipBody);\n    }\n\n    var positionY = this._chart.canvas.offsetTop;\n    var positionX = this._chart.canvas.offsetLeft; // Display, position, and set styles for font\n\n    tooltip.style.opacity = 1;\n    tooltip.style.left = positionX + tooltipModel.caretX + \"px\";\n    tooltip.style.top = positionY + tooltipModel.caretY + \"px\";\n  }\n\n  exports.CustomTooltips = CustomTooltips;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","import React, { Component, lazy, Suspense } from \"react\";\nimport { Bar, Line } from \"react-chartjs-2\";\nimport {\n  Badge,\n  Button,\n  ButtonDropdown,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n  Col,\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Progress,\n  Row,\n  Table\n} from \"reactstrap\";\nimport { CustomTooltips } from \"@coreui/coreui-plugin-chartjs-custom-tooltips\";\nimport { getStyle, hexToRgba } from \"@coreui/coreui/dist/js/coreui-utilities\";\nimport UserService from \"../../../services/User\";\n\nimport LoadingOverlay from \"react-loading-overlay\";\n\nconst Widget03 = lazy(() => import(\"../../../views/Widgets/Widget03\"));\n\nconst brandPrimary = getStyle(\"--primary\");\nconst brandSuccess = getStyle(\"--success\");\nconst brandInfo = getStyle(\"--info\");\nconst brandWarning = getStyle(\"--warning\");\nconst brandDanger = getStyle(\"--danger\");\n\n// Card Chart 1\nconst cardChartData1 = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [\n    {\n      label: \"My First dataset\",\n      backgroundColor: brandPrimary,\n      borderColor: \"rgba(255,255,255,.55)\",\n      data: [65, 59, 84, 84, 51, 55, 40]\n    }\n  ]\n};\n\nconst cardChartOpts1 = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  },\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  scales: {\n    xAxes: [\n      {\n        gridLines: {\n          color: \"transparent\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          fontSize: 2,\n          fontColor: \"transparent\"\n        }\n      }\n    ],\n    yAxes: [\n      {\n        display: false,\n        ticks: {\n          display: false,\n          min: Math.min.apply(Math, cardChartData1.datasets[0].data) - 5,\n          max: Math.max.apply(Math, cardChartData1.datasets[0].data) + 5\n        }\n      }\n    ]\n  },\n  elements: {\n    line: {\n      borderWidth: 1\n    },\n    point: {\n      radius: 4,\n      hitRadius: 10,\n      hoverRadius: 4\n    }\n  }\n};\n\n// Card Chart 2\nconst cardChartData2 = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [\n    {\n      label: \"My First dataset\",\n      backgroundColor: brandInfo,\n      borderColor: \"rgba(255,255,255,.55)\",\n      data: [1, 18, 9, 17, 34, 22, 11]\n    }\n  ]\n};\n\nconst cardChartOpts2 = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  },\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  scales: {\n    xAxes: [\n      {\n        gridLines: {\n          color: \"transparent\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          fontSize: 2,\n          fontColor: \"transparent\"\n        }\n      }\n    ],\n    yAxes: [\n      {\n        display: false,\n        ticks: {\n          display: false,\n          min: Math.min.apply(Math, cardChartData2.datasets[0].data) - 5,\n          max: Math.max.apply(Math, cardChartData2.datasets[0].data) + 5\n        }\n      }\n    ]\n  },\n  elements: {\n    line: {\n      tension: 0.00001,\n      borderWidth: 1\n    },\n    point: {\n      radius: 4,\n      hitRadius: 10,\n      hoverRadius: 4\n    }\n  }\n};\n\n// Card Chart 3\nconst cardChartData3 = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [\n    {\n      label: \"My First dataset\",\n      backgroundColor: \"rgba(255,255,255,.2)\",\n      borderColor: \"rgba(255,255,255,.55)\",\n      data: [78, 81, 80, 45, 34, 12, 40]\n    }\n  ]\n};\n\nconst cardChartOpts3 = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  },\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  scales: {\n    xAxes: [\n      {\n        display: false\n      }\n    ],\n    yAxes: [\n      {\n        display: false\n      }\n    ]\n  },\n  elements: {\n    line: {\n      borderWidth: 2\n    },\n    point: {\n      radius: 0,\n      hitRadius: 10,\n      hoverRadius: 4\n    }\n  }\n};\n\n// Card Chart 4\nconst cardChartData4 = {\n  labels: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n  datasets: [\n    {\n      label: \"My First dataset\",\n      backgroundColor: \"rgba(255,255,255,.3)\",\n      borderColor: \"transparent\",\n      data: [78, 81, 80, 45, 34, 12, 40, 75, 34, 89, 32, 68, 54, 72, 18, 98]\n    }\n  ]\n};\n\nconst cardChartOpts4 = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  },\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  scales: {\n    xAxes: [\n      {\n        display: false,\n        barPercentage: 0.6\n      }\n    ],\n    yAxes: [\n      {\n        display: false\n      }\n    ]\n  }\n};\n\n// Social Box Chart\nconst socialBoxData = [\n  { data: [65, 59, 84, 84, 51, 55, 40], label: \"facebook\" },\n  { data: [1, 13, 9, 17, 34, 41, 38], label: \"twitter\" },\n  { data: [78, 81, 80, 45, 34, 12, 40], label: \"linkedin\" },\n  { data: [35, 23, 56, 22, 97, 23, 64], label: \"google\" }\n];\n\nconst makeSocialBoxData = dataSetNo => {\n  const dataset = socialBoxData[dataSetNo];\n  const data = {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n    datasets: [\n      {\n        backgroundColor: \"rgba(255,255,255,.1)\",\n        borderColor: \"rgba(255,255,255,.55)\",\n        pointHoverBackgroundColor: \"#fff\",\n        borderWidth: 2,\n        data: dataset.data,\n        label: dataset.label\n      }\n    ]\n  };\n  return () => data;\n};\n\nconst socialChartOpts = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  scales: {\n    xAxes: [\n      {\n        display: false\n      }\n    ],\n    yAxes: [\n      {\n        display: false\n      }\n    ]\n  },\n  elements: {\n    point: {\n      radius: 0,\n      hitRadius: 10,\n      hoverRadius: 4,\n      hoverBorderWidth: 3\n    }\n  }\n};\n\n// sparkline charts\nconst sparkLineChartData = [\n  {\n    data: [35, 23, 56, 22, 97, 23, 64],\n    label: \"New Clients\"\n  },\n  {\n    data: [65, 59, 84, 84, 51, 55, 40],\n    label: \"Recurring Clients\"\n  },\n  {\n    data: [35, 23, 56, 22, 97, 23, 64],\n    label: \"Pageviews\"\n  },\n  {\n    data: [65, 59, 84, 84, 51, 55, 40],\n    label: \"Organic\"\n  },\n  {\n    data: [78, 81, 80, 45, 34, 12, 40],\n    label: \"CTR\"\n  },\n  {\n    data: [1, 13, 9, 17, 34, 41, 38],\n    label: \"Bounce Rate\"\n  }\n];\n\nconst makeSparkLineData = (dataSetNo, variant) => {\n  const dataset = sparkLineChartData[dataSetNo];\n  const data = {\n    labels: [\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n      \"Sunday\"\n    ],\n    datasets: [\n      {\n        backgroundColor: \"transparent\",\n        borderColor: variant ? variant : \"#c2cfd6\",\n        data: dataset.data,\n        label: dataset.label\n      }\n    ]\n  };\n  return () => data;\n};\n\nconst sparklineChartOpts = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  },\n  responsive: true,\n  maintainAspectRatio: true,\n  scales: {\n    xAxes: [\n      {\n        display: false\n      }\n    ],\n    yAxes: [\n      {\n        display: false\n      }\n    ]\n  },\n  elements: {\n    line: {\n      borderWidth: 2\n    },\n    point: {\n      radius: 0,\n      hitRadius: 10,\n      hoverRadius: 4,\n      hoverBorderWidth: 3\n    }\n  },\n  legend: {\n    display: false\n  }\n};\n\n// Main Chart\n\n//Random Numbers\nfunction random(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nvar elements = 27;\nvar data1 = [];\nvar data2 = [];\nvar data3 = [];\n\nfor (var i = 0; i <= elements; i++) {\n  data1.push(random(50, 200));\n  data2.push(random(80, 100));\n  data3.push(65);\n}\n\nconst mainChart = {\n  labels: [\n    \"Mo\",\n    \"Tu\",\n    \"We\",\n    \"Th\",\n    \"Fr\",\n    \"Sa\",\n    \"Su\",\n    \"Mo\",\n    \"Tu\",\n    \"We\",\n    \"Th\",\n    \"Fr\",\n    \"Sa\",\n    \"Su\",\n    \"Mo\",\n    \"Tu\",\n    \"We\",\n    \"Th\",\n    \"Fr\",\n    \"Sa\",\n    \"Su\",\n    \"Mo\",\n    \"Tu\",\n    \"We\",\n    \"Th\",\n    \"Fr\",\n    \"Sa\",\n    \"Su\"\n  ],\n  datasets: [\n    {\n      label: \"My First dataset\",\n      backgroundColor: hexToRgba(brandInfo, 10),\n      borderColor: brandInfo,\n      pointHoverBackgroundColor: \"#fff\",\n      borderWidth: 2,\n      data: data1\n    },\n    {\n      label: \"My Second dataset\",\n      backgroundColor: \"transparent\",\n      borderColor: brandSuccess,\n      pointHoverBackgroundColor: \"#fff\",\n      borderWidth: 2,\n      data: data2\n    },\n    {\n      label: \"My Third dataset\",\n      backgroundColor: \"transparent\",\n      borderColor: brandDanger,\n      pointHoverBackgroundColor: \"#fff\",\n      borderWidth: 1,\n      borderDash: [8, 5],\n      data: data3\n    }\n  ]\n};\n\nconst mainChartOpts = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips,\n    intersect: true,\n    mode: \"index\",\n    position: \"nearest\",\n    callbacks: {\n      labelColor: function(tooltipItem, chart) {\n        return {\n          backgroundColor:\n            chart.data.datasets[tooltipItem.datasetIndex].borderColor\n        };\n      }\n    }\n  },\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  scales: {\n    xAxes: [\n      {\n        gridLines: {\n          drawOnChartArea: false\n        }\n      }\n    ],\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n          maxTicksLimit: 5,\n          stepSize: Math.ceil(250 / 5),\n          max: 250\n        }\n      }\n    ]\n  },\n  elements: {\n    point: {\n      radius: 0,\n      hitRadius: 10,\n      hoverRadius: 4,\n      hoverBorderWidth: 3\n    }\n  }\n};\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false\n    };\n\n    this.userService = new UserService();\n\n    this.toggle = this.toggle.bind(this);\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\n    this.loadUserOrRedirect = this.loadUserOrRedirect.bind(this);\n    this.state = {\n      dropdownOpen: false,\n      radioSelected: 2\n    };\n    this.renderDashboard = this.renderDashboard.bind(this);\n  }\n\n  componentWillMount() {\n    this.loadUserOrRedirect();\n  }\n\n  async loadUserOrRedirect() {\n    const user = await this.userService.getUser();\n    console.log(user);\n\n    if (!user) {\n      this.props.history.push(\"/login\");\n    }\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  onRadioBtnClick(radioSelected) {\n    this.setState({\n      radioSelected: radioSelected\n    });\n  }\n\n  loading = () => (\n    <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n  );\n\n  renderDashboard() {\n    const view = (\n      <Row>\n        <Col xs=\"12\" sm=\"6\" lg=\"3\">\n          <Card className=\"text-white bg-info\">\n            <CardBody className=\"pb-0\">\n              {/* <ButtonGroup className=\"float-right\">\n                <ButtonDropdown\n                  id=\"card1\"\n                  isOpen={this.state.card1}\n                  toggle={() => {\n                    this.setState({ card1: !this.state.card1 });\n                  }}\n                >\n                  <DropdownToggle caret className=\"p-0\" color=\"transparent\">\n                    <i className=\"icon-settings\" />\n                  </DropdownToggle> */}\n                  {/* <DropdownMenu right> */}\n                    {/* <DropdownItem\n                      onClick={() => {\n                        this.props.history.push(\"/available-load\");\n                      }}\n                    >\n                      See Available Loads\n                    </DropdownItem> */}\n                    {/* <DropdownItem>Another action</DropdownItem>\n                <DropdownItem disabled>Disabled action</DropdownItem>\n                <DropdownItem>Something else here</DropdownItem> */}\n                  {/* </DropdownMenu> */}\n                {/* </ButtonDropdown>\n              </ButtonGroup> */}\n              <div className=\"text-value\">100</div>\n              <div>Available Loads</div>\n            </CardBody>\n            <div className=\"chart-wrapper mx-3\" style={{ height: \"70px\" }}>\n              <Line\n                data={cardChartData2}\n                options={cardChartOpts2}\n                height={70}\n              />\n            </div>\n          </Card>\n        </Col>\n\n        <Col xs=\"12\" sm=\"6\" lg=\"3\">\n          <Card className=\"text-white bg-primary\">\n            <CardBody className=\"pb-0\">\n              {/* <ButtonGroup className=\"float-right\">\n                <Dropdown\n                  id=\"card2\"\n                  isOpen={this.state.card2}\n                  toggle={() => {\n                    this.setState({ card2: !this.state.card2 });\n                  }}\n                >\n                  <DropdownToggle className=\"p-0\" color=\"transparent\">\n                    <i className=\"icon-location-pin\" />\n                  </DropdownToggle>\n                  <DropdownMenu right> */}\n                    {/* <DropdownItem>Action</DropdownItem>\n                <DropdownItem>Another action</DropdownItem>\n                <DropdownItem>Something else here</DropdownItem> */}\n                  {/* </DropdownMenu>\n                </Dropdown>\n              </ButtonGroup> */}\n              <div className=\"text-value\">100</div>\n              <div>Completed Loads</div>\n            </CardBody>\n            <div className=\"chart-wrapper mx-3\" style={{ height: \"70px\" }}>\n              <Line\n                data={cardChartData1}\n                options={cardChartOpts1}\n                height={70}\n              />\n            </div>\n          </Card>\n        </Col>\n\n        <Col xs=\"12\" sm=\"6\" lg=\"3\">\n          <Card className=\"text-white bg-warning\">\n            <CardBody className=\"pb-0\">\n              {/* <ButtonGroup className=\"float-right\">\n                <Dropdown\n                  id=\"card3\"\n                  isOpen={this.state.card3}\n                  toggle={() => {\n                    this.setState({ card3: !this.state.card3 });\n                  }}\n                >\n                  <DropdownToggle caret className=\"p-0\" color=\"transparent\">\n                    <i className=\"icon-settings\" />\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    <DropdownItem\n                      onClick={() => {\n                        this.props.history.push(\"/my-bids\");\n                      }}\n                    >\n                      My Bids\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        this.props.history.push(\"/my-winning-bids\");\n                      }}\n                    >\n                      My Winning Bids\n                    </DropdownItem> */}\n                    {/* <DropdownItem>Something else here</DropdownItem> */}\n                  {/* </DropdownMenu>\n                </Dropdown>\n              </ButtonGroup> */}\n              <div className=\"text-value\">My Bids</div>\n              <div>100</div>\n            </CardBody>\n            <div className=\"chart-wrapper\" style={{ height: \"70px\" }}>\n              <Line\n                data={cardChartData3}\n                options={cardChartOpts3}\n                height={70}\n              />\n            </div>\n          </Card>\n        </Col>\n\n        <Col xs=\"12\" sm=\"6\" lg=\"3\">\n          <Card className=\"text-white bg-danger\">\n            <CardBody className=\"pb-0\">\n              {/* <ButtonGroup className=\"float-right\">\n                <ButtonDropdown\n                  id=\"card4\"\n                  isOpen={this.state.card4}\n                  toggle={() => {\n                    this.setState({ card4: !this.state.card4 });\n                  }}\n                >\n                  <DropdownToggle caret className=\"p-0\" color=\"transparent\">\n                    <i className=\"icon-settings\" />\n                  </DropdownToggle>\n                  <DropdownMenu right> */}\n                    {/* <DropdownItem>Action</DropdownItem>\n                <DropdownItem>Another action</DropdownItem>\n                <DropdownItem>Something else here</DropdownItem> */}\n                  {/* </DropdownMenu>\n                </ButtonDropdown>\n              </ButtonGroup> */}\n              <div className=\"text-value\">100</div>\n              <div>Income</div>\n            </CardBody>\n            <div className=\"chart-wrapper mx-3\" style={{ height: \"70px\" }}>\n              <Bar data={cardChartData4} options={cardChartOpts4} height={70} />\n            </div>\n          </Card>\n        </Col>\n      </Row>\n    );\n\n    // const rolePromise =  this.userService.adminRole();\n    // if (!rolePromise) {\n    //     return \"\";\n    // }\n    return view;\n  }\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <LoadingOverlay\n          active={this.state.loading}\n          styles={{\n            spinner: base => ({\n              ...base,\n              width: \"250px\",\n              background: \"rgba(0, 0, 0, 0.2)\"\n            })\n          }}\n          spinner\n          text=\"\"\n        />\n        {this.renderDashboard()}\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"],"sourceRoot":""}