{"version":3,"sources":["validation/input.js","views/CustomModals/SuccessModal.js","views/CustomModals/DangerModal.js","ApiCalls/admin.js","ApiCalls/role.js","views/Forms/Admin/AddAdminForm.js","views/Component/Admin/AddAdmin.js"],"names":["validateInput","obj","arr","errorMessages","name","description","phone","firstName","lastName","userName","email","password","distance","pickUpDate","dropOffDate","weight","rate","driverStatus","productDetails","pickUpAddress","pickUpCity","pickUpZipCode","pickUpState","dropOffAddress","dropOffCity","dropOffZipCode","dropOffState","status","offererCompanyId","brokerId","assignedCompanyId","assignerUserId","assignerDriverId","state","city","license","address","companyId","driverId","note","loadId","MC","DOT","errors","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","field","value","push","err","return","length","console","log","Success","_this","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_6__","isOpen","props","isVisible","toggle","toggleSuccess","className","reactstrap__WEBPACK_IMPORTED_MODULE_7__","title","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","color","onClick","toggleModal","goToDashboard","Component","DangerModal","toggleDanger","createAdmin","_x","_createAdmin","apply","arguments","_callee","data","userService","user","adminURL","promise","_mnt_01D372CE3128C020_PROGRAM_PART_koa_projects_morpro360_version3_morpro360_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context","prev","UserService","getUser","sent","AppConfig","axios","headers","Authorization","token","method","url","abrupt","stop","getAllAdmins","_getAllAdmins","_callee2","_context2","getRoles","_getRoles","roleURL","regenerator_default","AddAdminForm","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","RoleId","repeatPassword","isErrorModalVisible","modalErrorMessage","isSuccessModalVisible","successModalTitle","modalSuccessMessage","roleDropdown","loading","handleChange","bind","assertThisInitialized","handleSubmit","toggleDangerModal","toggleSuccessModal","loadRoles","roles","map","role","react_default","key","id","setState","e","defineProperty","target","preventDefault","stateData","validationErrors","errormessage","join","response","t0","alert","clearData","history","_this2","LoadingOverlay_default","active","styles","spinner","base","objectSpread","width","background","text","SuccessModal","Card","CardHeader","CardBody","Row","Col","md","FormGroup","Label","htmlFor","Input","type","placeholder","onChange","Button","AddAdmin","loadUserOrRedirect","AddAdminForm_AddAdminForm"],"mappings":"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","file":"static/js/62.325cc676.chunk.js","sourcesContent":["function validateInput(obj,arr)\n{\n    const errorMessages = {\n        \"name\" : \"Name cannot be blank\",\n        \"description\":\"Description cannot be blank\",\n        \"phone\":\"Phone number cannot be blank\",\n        \"firstName\":\"Fist name cannot be blank\",\n        \"lastName\": \"Last name cannot be blank\",\n        \"userName\":\"Username cannot be blank\",\n        \"email\" :\"Email cannot be blank\",\n        \"password\" : \"Password cannot be blank\",\n        \"distance\":\"Distance  cannot be blank\",\n        \"pickUpDate\":\"Pick Up Date cannot be blank\",\n        \"dropOffDate\":\"Drop Off Date cannot be blank\",\n        \"weight\":\"Weight cannot be blank\",\n        \"rate\":\"Rate cannot be blank\",\n        \"driverStatus\":\"Driver Status cannot be blank\",\n        \"productDetails\":\"Product Details cannot be blank\",\n        \"pickUpAddress\":\"Pick Up Address cannot be blank\",\n        \"pickUpCity\":\"Pick Up City cannot be blank\",\n        \"pickUpZipCode\":\"Pick Up Zip Code cannot be blank\",\n        \"pickUpState\":\"Pick Up State  cannot be blank\",\n        \"dropOffAddress\":\"Drop Off Address cannot be blank\",\n        \"dropOffCity\":\"Drop Off City cannot be blank\",\n        \"dropOffZipCode\":\"Drop Off Zip Code cannot be blank\",\n        \"dropOffState\":\"Drop Off State cannot be blank\",\n        \"status\":\"Status cannot be blank\",\n        \"offererCompanyId\":\"Offerer Company cannot be blank\",\n        \"brokerId\":\"Broker cannot be blank\",\n        \"assignedCompanyId\":\"Assigned Company cannot be blank\",\n        \"assignerUserId\":\"Assigned User cannot be blank\",\n        \"assignerDriverId\":\"Asigned Driver cannot be blank\",\n        \"state\":\"State cannot be blank\",\n        \"city\":\"City cannot be blank\",\n        \"license\":\"License cannot be blank\",\n        \"address\":\"Address cannot be blank\",\n        \"companyId\":\"Company cannnot be blank\",\n        \"driverId\":\"Driver cannot blank\",\n        \"note\":\"Note cannot be blank\",\n        \"loadId\":\"Load cannot be blank\",\n        \"MC\":\"MC cannot be blank\",\n        \"DOT\":\"DOT cannot be blank\",\n        \n\n    }\n    let errors = [];\n    for(let field of arr)\n    {\n        if(!obj[field])\n        {\n            errors.push(errorMessages[field]);\n        }\n    }\n    if (errors.length===0)\n    {\n        return false;\n    }\n    console.log(errors);\n    return errors;\n}\nexport default validateInput;","import React, {Component} from \"react\";\n\nimport {Button,Modal, ModalFooter, ModalHeader,ModalBody} from \"reactstrap\";\n\n\nexport default class Success extends Component{\n    \n    render()\n    {\n        return(\n     <Modal\n                  isOpen={this.props.isVisible}\n                  toggle={this.toggleSuccess}\n                  className={\"modal-success \" + this.props.className}\n                >\n                  <ModalHeader toggle={this.toggleSuccess}>\n                    {this.props.title}\n                  </ModalHeader>\n                  <ModalBody>\n                  <pre>{this.props.errors}</pre>\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"success\" onClick={()=>{this.props.toggleModal();this.props.goToDashboard();}}>\n                      OK\n                    </Button>{\" \"}\n                  </ModalFooter>\n                </Modal>\n        )\n    }\n\n}\n","import React, {Component} from \"react\";\n\nimport {Button,Modal, ModalFooter, ModalHeader,ModalBody} from \"reactstrap\";\n\n\nexport default class DangerModal extends Component{\n    \n    render()\n    {\n        return(\n            <Modal isOpen={this.props.isVisible} toggle={this.toggleDanger}\n            className={'modal-danger ' + this.props.className}>\n       <ModalHeader toggle={this.toggleDanger}>Error</ModalHeader>\n       <ModalBody>\n         <pre>{this.props.errors}</pre>\n       </ModalBody>\n       <ModalFooter>\n         {/* <Button color=\"danger\" onClick={this.toggleDanger}>Do Something</Button>{' '} */}\n         <Button color=\"secondary\" onClick={this.props.toggleModal}>CLOSE</Button>\n       </ModalFooter>\n     </Modal>\n        )\n    }\n\n}","import axios from \"axios\";\nimport AppConfig from \"../config/AppConfig\";\n\nimport UserService from \"../services/User\";\n\nexport async function createAdmin(data)\n{\n    const userService= new UserService();\n    const user = await userService.getUser()\n\n    const {adminURL} = AppConfig;\n\n    const promise = await axios({\n        headers:{\n            \"Authorization\":user.token,\n        },\n        method: \"POST\",\n        url:adminURL,\n        data\n    });\n    return promise;\n}\nexport async function getAllAdmins()\n{\n    const userService= new UserService();\n    const user = await userService.getUser()\n\n    const {adminURL} = AppConfig;\n\n    const promise = await axios({\n        headers:{\n            \"Authorization\":user.token,\n        },\n        method: \"GET\",\n        url:adminURL,\n    });\n    return promise;\n}\n","import axios from \"axios\";\nimport AppConfig from \"../config/AppConfig\";\n\nimport UserService from \"../services/User\";\n\nexport async function getRoles()\n{\n    const userService= new UserService();\n    const user = await userService.getUser()\n\n    const {roleURL} = AppConfig;\n\n    const promise = await axios({\n        headers:{\n            \"Authorization\":user.token,\n        },\n        method: \"GET\",\n        url:roleURL,\n    });\n    return promise;\n}\n","import React, { Component } from \"react\";\nimport {\n  Badge,\n  Button,\n  ButtonDropdown,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Collapse,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Fade,\n  Form,\n  FormGroup,\n  FormText,\n  FormFeedback,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Label,\n  Row\n} from \"reactstrap\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport UserService from \"../../../services/User\";\nimport validateInput from \"../../../validation/input\";\nimport { createAdmin } from \"../../../ApiCalls/admin\";\nimport { getRoles } from \"../../../ApiCalls/role\";\nimport DangerModal from \"../../CustomModals/DangerModal\";\nimport SuccessModal from \"../../CustomModals/SuccessModal\";\n\nexport default class AddAdminForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      phone: \"\",\n      email: \"\",\n      RoleId: \"\",\n      password: \"\",\n      repeatPassword: \"\",\n      isErrorModalVisible: false,\n      modalErrorMessage: \"\",\n      isSuccessModalVisible: false,\n      successModalTitle: \"Sucessful\",\n      modalSuccessMessage: \"\",\n      roleDropdown: [],\n      loading:false,\n    };\n    this.userService = new UserService();\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleDangerModal = this.toggleDangerModal.bind(this);\n    this.toggleSuccessModal = this.toggleSuccessModal.bind(this);\n    this.loadRoles = this.loadRoles.bind(this);\n  }\n\n  componentWillMount() {\n    this.loadRoles();\n  }\n  async loadRoles() {\n    const promise = await getRoles();\n    const data = promise.data.data;\n    const roles = data.map(role => {\n      return (\n        <option key={role.id} value={role.id}>\n          {role.name}\n        </option>\n      );\n    });\n\n    if (data.length > 0) {\n      this.setState({ RoleId: data[0].id });\n    }\n\n    this.setState({ roleDropdown: roles });\n  }\n\n  toggleDangerModal() {\n    this.setState((state, props) => ({\n      isErrorModalVisible: !state.isErrorModalVisible\n    }));\n  }\n  toggleSuccessModal() {\n    this.setState((state, props) => ({\n      isSuccessModalVisible: !state.isSuccessModalVisible\n    }));\n  }\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  async handleSubmit(e) {\n    e.preventDefault();\n\n    const {\n      isErrorModalVisible,\n      modalErrorMessage,\n      isSuccessModalVisible,\n      modalSuccessMessage,\n      successModalTitle,\n      roleDropdown,\n      repeatPassword,\n      loading,\n      ...stateData\n    } = this.state;\n    const validationErrors = validateInput(stateData, [\n      \"firstName\",\n      \"lastName\",\n      \"email\",\n      \"phone\",\n      \"password\"\n    ]);\n\n    if (validationErrors) {\n      const errormessage = validationErrors.join(\"\\n\");\n      this.setState({ modalErrorMessage: errormessage });\n      this.toggleDangerModal();\n\n      return;\n    }\n    if (this.state.password !== this.state.repeatPassword) {\n      const errormessage = \"Password and reapeated password mismatched\";\n      this.setState({ modalErrorMessage: errormessage });\n      this.toggleDangerModal();\n      return;\n    }\n\n    try {\n      this.setState({loading:true});\n      const response = await createAdmin(stateData);\n      const data = response.data;\n      if (data.status) {\n        const modalSuccessMessage = \"Successfully new admin added\";\n        this.setState({ modalSuccessMessage });\n        this.toggleSuccessModal();\n      } else {\n        const errormessage = data.errors.join(\"\\n\");\n        this.setState({ modalErrorMessage: errormessage });\n        this.toggleDangerModal();\n      }\n    } catch (err) {\n      console.log(err);\n      const response = err.response;\n      if (response && response.status === 401) {\n        const errorMessage = \"Session expired, please login to continue\";\n        alert(errorMessage);\n        this.userService.clearData();\n        this.props.history.push(\"/login\");\n      } else {\n        const errormessage = \"Something wrong, please try again later\";\n        this.setState({ modalErrorMessage: errormessage });\n        this.toggleDangerModal();\n      }\n    }\n    this.setState({loading:false});\n  }\n  render() {\n    return (\n      <div>\n       <LoadingOverlay\n          active={this.state.loading}\n          styles={{\n            spinner: base => ({\n              ...base,\n              width: \"250px\",\n              background: \"rgba(0, 0, 0, 0.2)\"\n            })\n          }}\n          spinner\n          text=\"\"\n        />\n        <DangerModal\n          isVisible={this.state.isErrorModalVisible}\n          errors={this.state.modalErrorMessage}\n          toggleModal={this.toggleDangerModal}\n        />\n        <SuccessModal\n          isVisible={this.state.isSuccessModalVisible}\n          errors={this.state.modalSuccessMessage}\n          toggleModal={this.toggleSuccessModal}\n          title={this.state.successModalTitle}\n          goToDashboard={() => this.props.history.push(\"/dashboard\")}\n        />\n        <Card>\n          <CardHeader>\n            <strong>Admin</strong>\n            <small> Form</small>\n          </CardHeader>\n          <CardBody>\n            <Row>\n              <Col md=\"6\">\n                <FormGroup>\n                  <Label htmlFor=\"firstName\">First Name</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"firstName\"\n                    placeholder=\"Enter first name\"\n                    name=\"firstName\"\n                    value={this.state.firstName}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"6\">\n                <FormGroup>\n                  <Label htmlFor=\"lastName\">Last Name</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"lastName\"\n                    placeholder=\"Enter last name\"\n                    name=\"lastName\"\n                    value={this.state.lastName}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"6\">\n                <FormGroup>\n                  <Label htmlFor=\"phone\">Phone</Label>\n                  <Input\n                    type=\"phone\"\n                    id=\"phone\"\n                    placeholder=\"xxxxxxxxx\"\n                    name=\"phone\"\n                    value={this.state.phone}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"6\">\n                <FormGroup>\n                  <Label htmlFor=\"email\">Email</Label>\n                  <Input\n                    type=\"email\"\n                    id=\"email\"\n                    placeholder=\"myawesomemail@mymail.com\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n\n            <FormGroup>\n              <Label htmlFor=\"RoleId\">Select Role</Label>\n              <Input\n                type=\"select\"\n                name=\"RoleId\"\n                id=\"RoleId\"\n                value={this.state.RoleId}\n                onChange={this.handleChange}\n              >\n                {this.state.roleDropdown}\n              </Input>\n            </FormGroup>\n\n            <FormGroup>\n              <Label htmlFor=\"password\">New Admin's Password</Label>\n              <Input\n                type=\"password\"\n                id=\"password\"\n                placeholder=\"This admin will use this password for logging in to his account\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"license\">Repeat Password</Label>\n              <Input\n                type=\"password\"\n                id=\"repeatPassword\"\n                placeholder=\"Repeat admin's password\"\n                name=\"repeatPassword\"\n                value={this.state.repeatPassword}\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            {/* <FormGroup>\n                <Label htmlFor=\"companyId\">Select Company</Label>\n                <Input type=\"select\" name=\"companyId\" id=\"companyId\" value={this.state.companyId} onChange={this.handleChange}>\n                   {this.state.companyDropdown}\n                </Input>\n              </FormGroup> */}\n          </CardBody>\n\n          {/* <Row className=\"align-items-right\">\n              <Col  md=\"3\" xs=\"1\" className=\"\">\n                <Button block color=\"success\">Success</Button>\n              </Col>\n            </Row> */}\n\n          <Button\n            onClick={this.handleSubmit}\n            className=\"btn btn-success col-6 align-self-center\"\n          >\n            <i className=\"fa fa-dot-circle-o\" /> Create Admin\n          </Button>\n          <br />\n          <br />\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport AddAdminForm from \"../../Forms/Admin/AddAdminForm\";\n\nimport UserService from \"../../../services/User\";\nexport default class AddAdmin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.userService = new UserService();\n    this.loadUserOrRedirect = this.loadUserOrRedirect.bind(this);\n  }\n\n  componentWillMount() {\n    // this.loadUserOrRedirect();\n  }\n  async loadUserOrRedirect() {\n    const user = await this.userService.getUser();\n\n    if (!user) {\n      this.props.history.push(\"/login\");\n    }\n  }\n\n  render() {\n    return <AddAdminForm history={this.props.history} />;\n  }\n}\n"],"sourceRoot":""}