{"version":3,"sources":["validation/input.js","views/CustomModals/SuccessModal.js","views/CustomModals/DangerModal.js","ApiCalls/driver.js","ApiCalls/bid.js","ApiCalls/user.js","views/CustomModals/UserDetailsModal.js","views/Component/Profile/index.js"],"names":["validateInput","obj","arr","errorMessages","name","description","phone","firstName","lastName","userName","email","password","distance","pickUpDate","dropOffDate","weight","rate","driverStatus","productDetails","pickUpAddress","pickUpCity","pickUpZipCode","pickUpState","dropOffAddress","dropOffCity","dropOffZipCode","dropOffState","status","offererCompanyId","brokerId","assignedCompanyId","assignerUserId","assignerDriverId","state","city","license","address","companyId","driverId","note","loadId","MC","DOT","errors","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","field","value","push","err","return","length","console","log","Success","_this","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_6__","isOpen","props","isVisible","toggle","toggleSuccess","className","reactstrap__WEBPACK_IMPORTED_MODULE_7__","title","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","color","onClick","toggleModal","goToDashboard","Component","DangerModal","toggleDanger","createDriver","_x","_createDriver","apply","arguments","_callee","data","userService","user","driverURL","promise","_mnt_01D372CE3128C020_PROGRAM_PART_koa_projects_morpro360_version3_morpro360_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context","prev","UserService","getUser","sent","AppConfig","axios","headers","Authorization","token","method","url","abrupt","stop","getCompanyDrivers","_x2","_getCompanyDrivers","_callee2","id","companyDriversURL","_context2","createBid","_createBid","bidURL","getMyBids","_getMyBids","myBidsURL","getWinnningBids","_getWinnningBids","_callee3","winningBidsURL","_context3","assignBid","_x3","_assignBid","_callee4","bidId","assignBidURL","_context4","createUser","_createUser","userURL","getUserDetails","_getUserDetails","userDetailsURL","getAllUsersAdmin","_getAllUsersAdmin","allUsersURL","activateUser","_x4","_activateUser","_callee5","activateUserURL","_context5","UserDetailsModal","Object","_mnt_01D372CE3128C020_PROGRAM_PART_koa_projects_morpro360_version3_morpro360_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_mnt_01D372CE3128C020_PROGRAM_PART_koa_projects_morpro360_version3_morpro360_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_mnt_01D372CE3128C020_PROGRAM_PART_koa_projects_morpro360_version3_morpro360_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","isSuccessModalVisible","successModalTitle","modalSuccessMessage","loading","handleSubmit","bind","_mnt_01D372CE3128C020_PROGRAM_PART_koa_projects_morpro360_version3_morpro360_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__","toggleSuccessModal","setState","e","preventDefault","response","isBidPressed","alert","reloadAllUsers","errormessage","join","t0","clearData","history","_this2","userDetails","drivers","react__WEBPACK_IMPORTED_MODULE_9___default","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","react_loading_overlay__WEBPACK_IMPORTED_MODULE_15___default","active","styles","spinner","base","_mnt_01D372CE3128C020_PROGRAM_PART_koa_projects_morpro360_version3_morpro360_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","width","background","text","map","driver","key","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","ShowUsersAdmin","loadUserDetails","loadCompanyDrivers","react_loading_overlay__WEBPACK_IMPORTED_MODULE_13___default"],"mappings":"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","file":"static/js/33.df2d6570.chunk.js","sourcesContent":["function validateInput(obj,arr)\n{\n    const errorMessages = {\n        \"name\" : \"Name cannot be blank\",\n        \"description\":\"Description cannot be blank\",\n        \"phone\":\"Phone number cannot be blank\",\n        \"firstName\":\"Fist name cannot be blank\",\n        \"lastName\": \"Last name cannot be blank\",\n        \"userName\":\"Username cannot be blank\",\n        \"email\" :\"Email cannot be blank\",\n        \"password\" : \"Password cannot be blank\",\n        \"distance\":\"Distance  cannot be blank\",\n        \"pickUpDate\":\"Pick Up Date cannot be blank\",\n        \"dropOffDate\":\"Drop Off Date cannot be blank\",\n        \"weight\":\"Weight cannot be blank\",\n        \"rate\":\"Rate cannot be blank\",\n        \"driverStatus\":\"Driver Status cannot be blank\",\n        \"productDetails\":\"Product Details cannot be blank\",\n        \"pickUpAddress\":\"Pick Up Address cannot be blank\",\n        \"pickUpCity\":\"Pick Up City cannot be blank\",\n        \"pickUpZipCode\":\"Pick Up Zip Code cannot be blank\",\n        \"pickUpState\":\"Pick Up State  cannot be blank\",\n        \"dropOffAddress\":\"Drop Off Address cannot be blank\",\n        \"dropOffCity\":\"Drop Off City cannot be blank\",\n        \"dropOffZipCode\":\"Drop Off Zip Code cannot be blank\",\n        \"dropOffState\":\"Drop Off State cannot be blank\",\n        \"status\":\"Status cannot be blank\",\n        \"offererCompanyId\":\"Offerer Company cannot be blank\",\n        \"brokerId\":\"Broker cannot be blank\",\n        \"assignedCompanyId\":\"Assigned Company cannot be blank\",\n        \"assignerUserId\":\"Assigned User cannot be blank\",\n        \"assignerDriverId\":\"Asigned Driver cannot be blank\",\n        \"state\":\"State cannot be blank\",\n        \"city\":\"City cannot be blank\",\n        \"license\":\"License cannot be blank\",\n        \"address\":\"Address cannot be blank\",\n        \"companyId\":\"Company cannnot be blank\",\n        \"driverId\":\"Driver cannot blank\",\n        \"note\":\"Note cannot be blank\",\n        \"loadId\":\"Load cannot be blank\",\n        \"MC\":\"MC cannot be blank\",\n        \"DOT\":\"DOT cannot be blank\",\n        \n\n    }\n    let errors = [];\n    for(let field of arr)\n    {\n        if(!obj[field])\n        {\n            errors.push(errorMessages[field]);\n        }\n    }\n    if (errors.length===0)\n    {\n        return false;\n    }\n    console.log(errors);\n    return errors;\n}\nexport default validateInput;","import React, {Component} from \"react\";\n\nimport {Button,Modal, ModalFooter, ModalHeader,ModalBody} from \"reactstrap\";\n\n\nexport default class Success extends Component{\n    \n    render()\n    {\n        return(\n     <Modal\n                  isOpen={this.props.isVisible}\n                  toggle={this.toggleSuccess}\n                  className={\"modal-success \" + this.props.className}\n                >\n                  <ModalHeader toggle={this.toggleSuccess}>\n                    {this.props.title}\n                  </ModalHeader>\n                  <ModalBody>\n                  <pre>{this.props.errors}</pre>\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"success\" onClick={()=>{this.props.toggleModal();this.props.goToDashboard();}}>\n                      OK\n                    </Button>{\" \"}\n                  </ModalFooter>\n                </Modal>\n        )\n    }\n\n}\n","import React, {Component} from \"react\";\n\nimport {Button,Modal, ModalFooter, ModalHeader,ModalBody} from \"reactstrap\";\n\n\nexport default class DangerModal extends Component{\n    \n    render()\n    {\n        return(\n            <Modal isOpen={this.props.isVisible} toggle={this.toggleDanger}\n            className={'modal-danger ' + this.props.className}>\n       <ModalHeader toggle={this.toggleDanger}>Error</ModalHeader>\n       <ModalBody>\n         <pre>{this.props.errors}</pre>\n       </ModalBody>\n       <ModalFooter>\n         {/* <Button color=\"danger\" onClick={this.toggleDanger}>Do Something</Button>{' '} */}\n         <Button color=\"secondary\" onClick={this.props.toggleModal}>CLOSE</Button>\n       </ModalFooter>\n     </Modal>\n        )\n    }\n\n}","import axios from \"axios\";\nimport AppConfig from \"../config/AppConfig\";\n\nimport UserService from \"../services/User\";\n\nexport async function createDriver(data)\n{\n    const userService= new UserService();\n    const user = await userService.getUser()\n\n    const {driverURL} = AppConfig;\n\n    const promise = await axios({\n        headers:{\n            \"Authorization\":user.token,\n        },\n        method: \"POST\",\n        url:driverURL,\n        data\n    });\n    return promise;\n}\n\nexport async function getCompanyDrivers(id)\n{\n    const userService= new UserService();\n    const user = await userService.getUser()\n\n    let {companyDriversURL} = AppConfig;\n    companyDriversURL +=\"/\"+id;\n    const promise = await axios({\n        headers:{\n            \"Authorization\":user.token,\n        },\n        method: \"GET\",\n        url:companyDriversURL,\n    });\n    return promise;\n}","import axios from \"axios\";\nimport AppConfig from \"../config/AppConfig\";\n\n\nimport UserService from \"../services/User\";\n\nexport async function createBid(data)\n{\n    const userService= new UserService();\n    const user = await userService.getUser();\n\n    const {bidURL} = AppConfig;\n \n    const promise = await axios({\n        headers:{\n            \"Authorization\":user.token,\n        },\n        method: \"POST\",\n        url:bidURL,\n        data\n    });\n    return promise;\n}\n\nexport async function getMyBids()\n{\n    const userService= new UserService();\n    const user = await userService.getUser();\n\n    const {myBidsURL} = AppConfig;\n \n    const promise = await axios({\n        headers:{\n            \"Authorization\":user.token,\n        },\n        method: \"GET\",\n        url:myBidsURL,\n\n    });\n    return promise;\n}\n\nexport async function getWinnningBids()\n{\n    const userService= new UserService();\n    const user = await userService.getUser();\n\n    const {winningBidsURL} = AppConfig;\n \n    const promise = await axios({\n        headers:{\n            \"Authorization\":user.token,\n        },\n        method: \"GET\",\n        url:winningBidsURL,\n\n    });\n    return promise;\n}\n\nexport async function assignBid(bidId,loadId)\n{\n    const userService= new UserService();\n    const user = await userService.getUser();\n\n    const {assignBidURL} = AppConfig;\n \n    const promise = await axios({\n        headers:{\n            \"Authorization\":user.token,\n        },\n        method: \"POST\",\n        url:assignBidURL,\n        data:{bidId,loadId}\n\n    });\n    return promise;\n}","import axios from \"axios\";\nimport AppConfig from \"../config/AppConfig\";\nimport UserService from \"../services/User\";\n\nexport async function createUser(data) {\n  const { userURL } = AppConfig;\n\n  const promise = await axios({\n    method: \"POST\",\n    url: userURL,\n    data\n  });\n  return promise;\n}\n\nexport async function getAllUsers() {\n  const { userURL } = AppConfig;\n\n  const promise = await axios({\n    method: \"GET\",\n    url: userURL\n  });\n  return promise;\n}\n\nexport async function getUserDetails(id) {\n  const userService = new UserService();\n  const user = await userService.getUser();\n\n  let { userDetailsURL } = AppConfig;\n  userDetailsURL += \"/\" + id + \"\";\n  console.log(userDetailsURL);\n  const promise = await axios({\n    headers: {\n      Authorization: user.token\n    },\n    method: \"GET\",\n    url: userDetailsURL\n  });\n  return promise;\n}\n\nexport async function getAllUsersAdmin(status) {\n  const userService = new UserService();\n  const user = await userService.getUser();\n\n  let { allUsersURL } = AppConfig;\n  allUsersURL += \"?status=\" + status;\n\n  const promise = await axios({\n    headers: {\n      Authorization: user.token\n    },\n    method: \"GET\",\n    url: allUsersURL\n  });\n  console.log(promise);\n  return promise;\n}\nexport async function activateUser(id) {\n  const userService = new UserService();\n  const user = await userService.getUser();\n\n  const { activateUserURL } = AppConfig;\n\n  const promise = await axios({\n    headers: {\n      Authorization: user.token\n    },\n    method: \"POST\",\n    url: activateUserURL,\n    data: { id }\n  });\n  console.log(promise);\n  return promise;\n}\n\nexport async function deactivateUser(id) {\n  const userService = new UserService();\n  const user = await userService.getUser();\n\n  const { deactivateUserURL } = AppConfig;\n\n  const promise = await axios({\n    headers: {\n      Authorization: user.token\n    },\n    method: \"POST\",\n    url: deactivateUserURL,\n    data: { id }\n  });\n  console.log(promise);\n  return promise;\n}\n","import React, { Component } from \"react\";\n\nimport {\n  Button,\n  Modal,\n  ModalFooter,\n  ModalHeader,\n  ModalBody,\n  Badge,\n  ButtonDropdown,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Collapse,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Fade,\n  Form,\n  FormGroup,\n  FormText,\n  FormFeedback,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Label,\n  Row\n} from \"reactstrap\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { activateUser } from \"../../ApiCalls/user\";\nimport validateInput from \"../../validation/input\";\nimport { createBid } from \"../../ApiCalls/bid\";\nimport { companyDrivers, getCompanyDrivers } from \"../../ApiCalls/driver\";\nimport { timingSafeEqual } from \"crypto\";\n\nimport SuccessModal from \"./SuccessModal\";\n\nexport default class UserDetailsModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errors: \"\",\n      isSuccessModalVisible: false,\n      successModalTitle: \"Sucessful\",\n      modalSuccessMessage: \"\",\n      loading: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleSuccessModal = this.toggleSuccessModal.bind(this);\n  }\n  //this.props.goToDashboard();\n  //this will be added later\n\n  componentWillMount() {}\n  toggleSuccessModal() {\n    this.setState((state, props) => ({\n      isSuccessModalVisible: !state.isSuccessModalVisible\n    }));\n  }\n\n  async handleSubmit(e, id) {\n    e.preventDefault();\n    this.setState({ loading: true });\n    try {\n      const response = await activateUser(id);\n      console.log(response);\n      const data = response.data;\n      console.log(data);\n      this.setState({ loading: false });\n      if (data.status) {\n        this.props.toggleModal();\n        const modalSuccessMessage = \"Successfully company activated\";\n        this.setState({ modalSuccessMessage, rate: \"\", isBidPressed: false });\n        // this.toggleSuccessModal();\n        alert(this.state.modalSuccessMessage);\n        this.props.reloadAllUsers();\n      } else {\n        const errormessage = data.errors.join(\"\\n\");\n        this.setState({ errors: errormessage });\n      }\n    } catch (err) {\n      console.log(err);\n      const response = err.response;\n      if (response && response.status === 401) {\n        const errorMessage = \"Session expired, please login to continue\";\n        alert(errorMessage);\n        this.userService.clearData();\n        this.props.history.push(\"/login\");\n      } else {\n        const errorMessage = \"Something wrong, please try again later\";\n        alert(errorMessage);\n        // this.setState({ errors: errorMessage });\n        // this.toggleDangerModal();\n      }\n    }\n    this.setState({ loading: false });\n  }\n\n  render() {\n    const user = this.props.userDetails;\n    const drivers = this.props.drivers;\n    console.log(user);\n    return (\n      <Modal\n        isOpen={this.props.isVisible}\n        toggle={this.toggleSuccess}\n        className={\"modal-lg \" + this.props.className}\n      >\n        {/* <SuccessModal\n          isVisible={this.state.isSuccessModalVisible}\n          errors={this.state.modalSuccessMessage}\n          toggleModal={this.toggleSuccessModal}\n          title={this.state.successModalTitle}\n          goToDashboard={() => this.props.history.push(\"/dashboard\")}\n        /> */}\n        <ModalHeader toggle={this.toggleSuccess}>\n          Name : {user.name}\n        </ModalHeader>\n        <ModalBody>\n          <LoadingOverlay\n            active={this.state.loading}\n            styles={{\n              spinner: base => ({\n                ...base,\n                width: \"250px\",\n                background: \"rgba(0, 0, 0, 0.2)\"\n              })\n            }}\n            spinner\n            text=\"\"\n          />\n          <pre>\n            Phone : {user.phone}\n            <br />\n            Email : {user.email}\n            <br />\n            MC# : {user.MC}\n            <br />\n            DOT# : {user.DOT}\n            <br />\n            State : {user.state}\n            <br />\n            City : {user.city}\n            <br />\n            Address : {user.address}\n            <br />\n            Description : {user.description}\n            <br />\n          </pre>\n          <br />\n          {drivers.length > 0 ? (\n            <h3>Drivers</h3>\n          ) : (\n            \"No drivers added by this company\"\n          )}\n          {drivers.map(driver => {\n            const view = (\n              <div key={driver.id}>\n                <h4>Name : {driver.name}</h4>\n                <p>Phone : {driver.phone}</p>\n                <p>Email : {driver.email}</p>\n                <p>License Number : {driver.license}</p>\n                <p>State : {driver.state}</p>\n                <p>City : {driver.city}</p>\n                <p>Address : {driver.address}</p>\n              </div>\n            );\n            return view;\n          })}\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"btn btn-danger\"\n            onClick={() => {\n              this.props.toggleModal();\n            }}\n          >\n            Close\n          </Button>\n          {!user.active ? (\n            <Button\n              color=\"success\"\n              onClick={e => {\n                this.handleSubmit(e, user.id);\n              }}\n            >\n              Activate this company\n            </Button>\n          ) : (\n            \"\"\n          )}\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Badge,\n  Button,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalFooter,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  ListGroupItemHeading,\n  ListGroupItemText,\n  Row,\n  TabContent,\n  TabPane,\n  Input\n} from \"reactstrap\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { getUserDetails } from \"../../../ApiCalls/user\";\nimport UserService from \"../../../services/User\";\nimport validateInput from \"../../../validation/input\";\n\nimport { getCompanyDrivers } from \"../../../ApiCalls/driver\";\nimport DangerModal from \"../../CustomModals/DangerModal\";\nimport SuccessModal from \"../../CustomModals/SuccessModal\";\nimport UserDetailsModal from \"../../CustomModals/UserDetailsModal\";\n\nexport default class ShowUsersAdmin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errors: \"\",\n      isSuccessModalVisible: false,\n      successModalTitle: \"Sucessful\",\n      modalSuccessMessage: \"\",\n      loading: false,\n      userDetails: {},\n      drivers: []\n    };\n    this.userService = new UserService();\n\n    this.loadUserDetails = this.loadUserDetails.bind(this);\n    this.toggleSuccessModal = this.toggleSuccessModal.bind(this);\n  }\n  //this.props.goToDashboard();\n  //this will be added later\n\n  componentWillMount() {\n    this.loadUserDetails();\n    this.loadCompanyDrivers();\n  }\n  toggleSuccessModal() {\n    this.setState((state, props) => ({\n      isSuccessModalVisible: !state.isSuccessModalVisible\n    }));\n  }\n\n  async loadUserDetails() {\n    const user = await this.userService.getUser();\n    this.setState({ loading: true });\n    try {\n      const promise = await getUserDetails(user.id);\n      const data = promise.data.data;\n      this.setState({ userDetails: data });\n      console.log(\"promise\", promise);\n    } catch (err) {\n      const response = err.response;\n      console.log(err.response);\n      if (response && response.status === 401) {\n        const errorMessage = \"Session expired, please login to continue\";\n        alert(errorMessage);\n        this.userService.clearData();\n        this.props.history.push(\"/login\");\n      }\n    }\n    this.setState({ loading: false });\n  }\n\n  async loadCompanyDrivers() {\n    const user = await this.userService.getUser();\n\n    this.setState({ loading: true });\n    try {\n      const promise = await getCompanyDrivers(user.id);\n      const data = promise.data.data;\n      console.log(\"driver data\", promise.data);\n      this.setState({ drivers: data, loading: false });\n    } catch (err) {\n      const response = err.response;\n      console.log(err.response);\n      if (response && response.status === 401) {\n        // const errorMessage = \"Session expired, please login to continue\";\n        // alert(errorMessage);\n        // this.userService.clearData();\n        // this.props.history.push(\"/login\");\n      }\n    }\n  }\n\n  render() {\n    const user = this.state.userDetails;\n    const drivers = this.state.drivers;\n    console.log(user);\n    return (\n      <Card>\n        <CardHeader>\n          <i className=\"fa fa-align-justify\" />\n          <strong>My Company Details</strong>\n          {/* <small> custom content</small> */}\n        </CardHeader>\n        <CardBody>\n          <LoadingOverlay\n            active={this.state.loading}\n            styles={{\n              spinner: base => ({\n                ...base,\n                width: \"250px\",\n                background: \"rgba(0, 0, 0, 0.2)\"\n              })\n            }}\n            spinner\n            text=\"\"\n          />\n          <h2>Company Name : {user.name}</h2>\n          <div className=\"row\">\n            <b className=\"col-sm\">Phone : {user.phone}</b>\n            <b className=\"col-sm\">Email : {user.email}</b>\n            <b className=\"col-sm\">MC# : {user.MC}</b>\n            <b className=\"col-sm\">DOT# : {user.DOT}</b>\n          </div>\n          <div className=\"row\">\n            <b className=\"col-sm\">\n              Status : {user.active ? \"Active\" : \"Inactive\"}\n            </b>\n            <b className=\"col-sm\">State : {user.state}</b>\n            <b className=\"col-sm\">City : {user.city}</b>\n            <b className=\"col-sm\">Address : {user.address}</b>\n          </div>\n          <div>\n            {user.description ? \"Description : \" + user.description : \"\"}\n            <br />\n            {drivers.length > 0 ? (\n              <div>\n                <h3>Drivers</h3>\n                <h3>\n                  Number of drivers : {drivers.length}\n                </h3>\n              </div>\n            ) : (\n              \"No drivers added by this company\"\n            )}\n            {drivers.map(driver => {\n              const view = (\n                <div key={driver.id}>\n                  <h4><strong>Name : {driver.name}</strong></h4>\n                  <p>Phone : {driver.phone}</p>\n                  <p>Email : {driver.email}</p>\n                  <p>License Number : {driver.license}</p>\n                  <p>State : {driver.state}</p>\n                  <p>City : {driver.city}</p>\n                  <p>Address : {driver.address}</p>\n                </div>\n              );\n              return view;\n            })}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n"],"sourceRoot":""}