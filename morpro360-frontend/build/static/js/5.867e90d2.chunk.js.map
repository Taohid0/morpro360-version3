{"version":3,"sources":["../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/keys.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/_toKey.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/isLength.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_isKey.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/find.js","../node_modules/lodash/_createFind.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/lodash/findIndex.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/toFinite.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js"],"names":["freeGlobal","__webpack_require__","freeSelf","self","Object","root","Function","module","exports","isArray","Array","baseIsNative","getValue","object","key","value","undefined","webpackPolyfill","deprecate","paths","children","defineProperty","enumerable","get","l","i","Symbol","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","length","this","clear","entry","set","prototype","has","eq","array","type","nativeCreate","getNative","isKeyable","map","data","__data__","arrayLikeKeys","baseKeys","isArrayLike","baseGetTag","isObjectLike","symbolTag","isSymbol","INFINITY","result","process","d","__webpack_exports__","Doughnut","Pie","Line","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5___default","_extends","assign","target","arguments","source","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","args","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroy","updateChart","shouldComponentUpdate","nextProps","_props","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","datasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","_this2","a","helpers","configMerge","currentDatasets","config","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","_this4","_ref","_React$Component3","_this6","_ref2","_React$Component4","_this8","_ref3","_React$Component5","_this10","_ref4","_React$Component6","HorizontalBar","_this12","_ref5","_React$Component7","_this14","_ref6","_React$Component8","_this16","_ref7","_React$Component9","Bubble","_this18","_ref8","_React$Component10","Scatter","_this20","_ref9","defaults","baseIsEqualDeep","baseIsEqual","other","bitmask","customizer","stack","Map","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","MAX_SAFE_INTEGER","isFunction","isLength","baseMatches","baseMatchesProperty","identity","property","reIsDeepProp","reIsPlainProp","test","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","slice","pair","exec","from","to","round","convs","routeSpace","space","values","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","noop","uid","isNullOrUndef","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","asyncTag","funcTag","genTag","proxyTag","tag","funcToString","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","baseIsArguments","objectProto","propertyIsEnumerable","isArguments","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","reIsUint","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","srcValue","castPath","toKey","path","isKey","stringToPath","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","predicate","Uint8Array","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","typedArrayTags","freeProcess","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","find","createFind","baseIteratee","findIndexFunc","iterable","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","isStrictComparable","hasIn","baseGet","memoizeCapped","rePropName","reEscapeChar","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","baseToString","arrayMap","symbolToString","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep","baseFindIndex","toInteger","nativeMax","fromRight","toFinite","remainder","toNumber","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","isBinary","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","initializer","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","eachFunc"],"mappings":"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","file":"static/js/5.867e90d2.chunk.js","sourcesContent":["var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\n\n\nvar find = createFind(findIndex);\nmodule.exports = find;","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function predicate(key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeMax = Math.max;\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\n\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return -1;\n  }\n\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while (fromRight ? index-- : ++index < length) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = baseFindIndex;","var toFinite = require('./toFinite');\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\n\n\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n  return result === result ? remainder ? result - remainder : result : 0;\n}\n\nmodule.exports = toInteger;","var toNumber = require('./toNumber');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\n\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n\n  value = toNumber(value);\n\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = value < 0 ? -1 : 1;\n    return sign * MAX_INTEGER;\n  }\n\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar NAN = 0 / 0;\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = toNumber;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;"],"sourceRoot":""}